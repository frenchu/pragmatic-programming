<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kotlintest adoption on Pragmatic Programming</title><link>https://pawelweselak.com/series/kotlintest-adoption/</link><description>Recent content in Kotlintest adoption on Pragmatic Programming</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 14 Mar 2020 22:45:41 +0200</lastBuildDate><atom:link href="https://pawelweselak.com/series/kotlintest-adoption/index.xml" rel="self" type="application/rss+xml"/><item><title>Kotlintest adventures</title><link>https://pawelweselak.com/posts/kotlintest-adventures/</link><pubDate>Sat, 14 Mar 2020 22:45:41 +0200</pubDate><guid>https://pawelweselak.com/posts/kotlintest-adventures/</guid><description>Common pitfalls and how to deal with them
Intro Our team currently started cruise to develop next version of â€˜the API&amp;rsquo; and new set of services emerged during that journey. We have free hand to sail to the open waters of technologies ocean, so can choose the best fit to our project. Our ship wharfed to island named kotlin language. Very quickly we discovered Kotlintest library on this island. When fighting the battle of writing test cases to our production code we had a mutiny incited by Kotlintest.</description></item></channel></rss>